{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOqGcgR/2+AWy2egH183q7Y",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Mehaksaluja/Flipkart_Data_Analysis/blob/main/Data_cleaning/Laptop_Dataset_Cleaning\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "YwgN4DRSpKNh"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "laptops = pd.read_csv('flipkart_laptops_data.csv')"
      ],
      "metadata": {
        "id": "LA_ZH972pjrZ"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "laptops.head(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 456
        },
        "id": "soBP1Cu9Mkjm",
        "outputId": "065f27fa-72ff-43f2-9f08-e3308990b131"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        Product Name Rating    Price  \\\n",
              "0  Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...    4.3  ₹51,990   \n",
              "1  CHUWI Intel Celeron Dual Core 11th Gen N4020 -...    3.7  ₹18,990   \n",
              "\n",
              "  Number of Ratings and Reviews Discount Price Before Discount  \\\n",
              "0   1,558 Ratings & 117 Reviews  38% off               ₹84,999   \n",
              "1   1,151 Ratings & 133 Reviews  52% off               ₹39,990   \n",
              "\n",
              "  Is Flipkart Assured                                        Product URL  \\\n",
              "0                 Yes  https://www.flipkart.com/acer-aspire-7-intel-c...   \n",
              "1                  No  https://www.flipkart.com/chuwi-intel-celeron-d...   \n",
              "\n",
              "                                       Sales Package   Model Number  ...  \\\n",
              "0  Laptop, Power Adaptor, User Guide, Warranty Do...       A715-79G  ...   \n",
              "1                 Laptop, Charger, User Guide Manual  HeroBook Plus  ...   \n",
              "\n",
              "  Expandable SSD Capacity Expandable Memory EMMC Storage Capacity  TGP  \\\n",
              "0                     NaN               NaN                   NaN  NaN   \n",
              "1                     NaN               NaN                   NaN  NaN   \n",
              "\n",
              "  Chipset HDD Capacity RPM Cloud Storage UFS Storage Capacity Optane Memory  \n",
              "0     NaN          NaN NaN           NaN                  NaN           NaN  \n",
              "1     NaN          NaN NaN           NaN                  NaN           NaN  \n",
              "\n",
              "[2 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ac913b37-e890-46c2-ad31-4a523c2ce32f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Product Name</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Price</th>\n",
              "      <th>Number of Ratings and Reviews</th>\n",
              "      <th>Discount</th>\n",
              "      <th>Price Before Discount</th>\n",
              "      <th>Is Flipkart Assured</th>\n",
              "      <th>Product URL</th>\n",
              "      <th>Sales Package</th>\n",
              "      <th>Model Number</th>\n",
              "      <th>...</th>\n",
              "      <th>Expandable SSD Capacity</th>\n",
              "      <th>Expandable Memory</th>\n",
              "      <th>EMMC Storage Capacity</th>\n",
              "      <th>TGP</th>\n",
              "      <th>Chipset</th>\n",
              "      <th>HDD Capacity</th>\n",
              "      <th>RPM</th>\n",
              "      <th>Cloud Storage</th>\n",
              "      <th>UFS Storage Capacity</th>\n",
              "      <th>Optane Memory</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>₹51,990</td>\n",
              "      <td>1,558 Ratings &amp; 117 Reviews</td>\n",
              "      <td>38% off</td>\n",
              "      <td>₹84,999</td>\n",
              "      <td>Yes</td>\n",
              "      <td>https://www.flipkart.com/acer-aspire-7-intel-c...</td>\n",
              "      <td>Laptop, Power Adaptor, User Guide, Warranty Do...</td>\n",
              "      <td>A715-79G</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>CHUWI Intel Celeron Dual Core 11th Gen N4020 -...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>₹18,990</td>\n",
              "      <td>1,151 Ratings &amp; 133 Reviews</td>\n",
              "      <td>52% off</td>\n",
              "      <td>₹39,990</td>\n",
              "      <td>No</td>\n",
              "      <td>https://www.flipkart.com/chuwi-intel-celeron-d...</td>\n",
              "      <td>Laptop, Charger, User Guide Manual</td>\n",
              "      <td>HeroBook Plus</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2 rows × 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac913b37-e890-46c2-ad31-4a523c2ce32f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ac913b37-e890-46c2-ad31-4a523c2ce32f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ac913b37-e890-46c2-ad31-4a523c2ce32f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b6b57a52-79cf-4966-bae8-65207073761b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6b57a52-79cf-4966-bae8-65207073761b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b6b57a52-79cf-4966-bae8-65207073761b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "laptops"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "laptops.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FoX8ZxIWMlbf",
        "outputId": "172b493a-70aa-48fb-fb23-a6fe06db0504"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 912 entries, 0 to 911\n",
            "Data columns (total 49 columns):\n",
            " #   Column                             Non-Null Count  Dtype  \n",
            "---  ------                             --------------  -----  \n",
            " 0   Product Name                       912 non-null    object \n",
            " 1   Rating                             912 non-null    object \n",
            " 2   Price                              912 non-null    object \n",
            " 3   Number of Ratings and Reviews      912 non-null    object \n",
            " 4   Discount                           912 non-null    object \n",
            " 5   Price Before Discount              912 non-null    object \n",
            " 6   Is Flipkart Assured                912 non-null    object \n",
            " 7   Product URL                        912 non-null    object \n",
            " 8   Sales Package                      858 non-null    object \n",
            " 9   Model Number                       858 non-null    object \n",
            " 10  Part Number                        858 non-null    object \n",
            " 11  Model Name                         842 non-null    object \n",
            " 12  Series                             764 non-null    object \n",
            " 13  Color                              858 non-null    object \n",
            " 14  Type                               858 non-null    object \n",
            " 15  Suitable For                       858 non-null    object \n",
            " 16  MS Office Provided                 858 non-null    object \n",
            " 17  Dedicated Graphic Memory Type      408 non-null    object \n",
            " 18  Dedicated Graphic Memory Capacity  354 non-null    object \n",
            " 19  Processor Brand                    858 non-null    object \n",
            " 20  Processor Name                     858 non-null    object \n",
            " 21  Processor Generation               605 non-null    object \n",
            " 22  SSD                                858 non-null    object \n",
            " 23  SSD Capacity                       838 non-null    object \n",
            " 24  RAM                                858 non-null    object \n",
            " 25  RAM Type                           858 non-null    object \n",
            " 26  Processor Variant                  801 non-null    object \n",
            " 27  Clock Speed                        711 non-null    object \n",
            " 28  Graphic Processor                  801 non-null    object \n",
            " 29  Storage Type                       858 non-null    object \n",
            " 30  Battery Backup                     338 non-null    object \n",
            " 31  Power Supply                       318 non-null    object \n",
            " 32  Inbuilt 4G LTE                     83 non-null     object \n",
            " 33  Stylus Included                    87 non-null     object \n",
            " 34  Number of Cores                    257 non-null    float64\n",
            " 35  Battery Cell                       358 non-null    object \n",
            " 36  RAM Frequency                      144 non-null    object \n",
            " 37  Cache                              192 non-null    object \n",
            " 38  Memory Slots                       92 non-null     object \n",
            " 39  Expandable SSD Capacity            28 non-null     object \n",
            " 40  Expandable Memory                  119 non-null    object \n",
            " 41  EMMC Storage Capacity              13 non-null     object \n",
            " 42  TGP                                40 non-null     object \n",
            " 43  Chipset                            102 non-null    object \n",
            " 44  HDD Capacity                       9 non-null      object \n",
            " 45  RPM                                39 non-null     float64\n",
            " 46  Cloud Storage                      2 non-null      object \n",
            " 47  UFS Storage Capacity               1 non-null      object \n",
            " 48  Optane Memory                      1 non-null      object \n",
            "dtypes: float64(2), object(47)\n",
            "memory usage: 349.3+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Handling Columns and NULL Values**"
      ],
      "metadata": {
        "id": "pTF71dFVUc7M"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = laptops.loc[:,laptops.count()>=800]"
      ],
      "metadata": {
        "id": "yddf2OoEM0d8"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lw4B1MR7NvLC",
        "outputId": "6238bd47-18ad-4886-8d75-594cebf5fe53"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Product Name', 'Rating', 'Price', 'Number of Ratings and Reviews',\n",
              "       'Discount', 'Price Before Discount', 'Is Flipkart Assured',\n",
              "       'Product URL', 'Sales Package', 'Model Number', 'Part Number',\n",
              "       'Model Name', 'Color', 'Type', 'Suitable For', 'MS Office Provided',\n",
              "       'Processor Brand', 'Processor Name', 'SSD', 'SSD Capacity', 'RAM',\n",
              "       'RAM Type', 'Processor Variant', 'Graphic Processor', 'Storage Type'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "From above dataframe , we can delete some columns which are not required for the analysis. Here are the columns:\n",
        "1.   'Is Flipkart Assured'\n",
        "2.   'Product URL'\n",
        "3. 'Sales Package'\n",
        "4. 'Model Number'\n",
        "5. 'Part Number'\n",
        "6. 'Model Name'\n",
        "7. 'Type'\n",
        "8. 'Color'\n",
        "9. 'Suitable For'\n",
        "10. 'MS Office Provided'\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "Mol5-z3mOdwH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "columns_to_drop = [\n",
        "    'Is Flipkart Assured', 'Product URL', 'Sales Package', 'Model Number',\n",
        "    'Part Number', 'Model Name', 'Color', 'Type', 'Suitable For', 'MS Office Provided'\n",
        "]\n",
        "\n",
        "# Drop the columns\n",
        "df.drop(columns=columns_to_drop, inplace=True)"
      ],
      "metadata": {
        "id": "LJ1k4yrqOl7I"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(4)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "id": "rzWanLhxP73K",
        "outputId": "d1319887-4a40-4868-c412-5152a9e1e8dc"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        Product Name Rating    Price  \\\n",
              "0  Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...    4.3  ₹51,990   \n",
              "1  CHUWI Intel Celeron Dual Core 11th Gen N4020 -...    3.7  ₹18,990   \n",
              "2  HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...    4.2  ₹47,990   \n",
              "3  HP Pavilion Intel Core i5 12th Gen 1235U - (16...    4.3  ₹56,990   \n",
              "\n",
              "  Number of Ratings and Reviews Discount Price Before Discount  \\\n",
              "0   1,558 Ratings & 117 Reviews  38% off               ₹84,999   \n",
              "1   1,151 Ratings & 133 Reviews  52% off               ₹39,990   \n",
              "2   5,674 Ratings & 292 Reviews  23% off               ₹62,526   \n",
              "3   2,011 Ratings & 149 Reviews  22% off               ₹73,688   \n",
              "\n",
              "  Processor Brand     Processor Name  SSD SSD Capacity    RAM RAM Type  \\\n",
              "0           Intel            Core i5  Yes       512 GB  16 GB     DDR4   \n",
              "1           Intel  Celeron Dual Core  Yes       256 GB   8 GB     DDR5   \n",
              "2           Intel            Core i5  Yes       512 GB  16 GB     DDR4   \n",
              "3           Intel            Core i5  Yes       512 GB  16 GB     DDR4   \n",
              "\n",
              "  Processor Variant              Graphic Processor Storage Type  \n",
              "0            13420H        NVIDIA GeForce RTX 2050          SSD  \n",
              "1             N4020           Intel Integrated UHD          SSD  \n",
              "2             1235U       Intel Integrated Iris Xe          SSD  \n",
              "3             1235U  Intel Integrated UHD Graphics          SSD  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a8063d8e-a1fd-42cb-a2e9-fcf261c8fdaa\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Product Name</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Price</th>\n",
              "      <th>Number of Ratings and Reviews</th>\n",
              "      <th>Discount</th>\n",
              "      <th>Price Before Discount</th>\n",
              "      <th>Processor Brand</th>\n",
              "      <th>Processor Name</th>\n",
              "      <th>SSD</th>\n",
              "      <th>SSD Capacity</th>\n",
              "      <th>RAM</th>\n",
              "      <th>RAM Type</th>\n",
              "      <th>Processor Variant</th>\n",
              "      <th>Graphic Processor</th>\n",
              "      <th>Storage Type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>₹51,990</td>\n",
              "      <td>1,558 Ratings &amp; 117 Reviews</td>\n",
              "      <td>38% off</td>\n",
              "      <td>₹84,999</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>13420H</td>\n",
              "      <td>NVIDIA GeForce RTX 2050</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>CHUWI Intel Celeron Dual Core 11th Gen N4020 -...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>₹18,990</td>\n",
              "      <td>1,151 Ratings &amp; 133 Reviews</td>\n",
              "      <td>52% off</td>\n",
              "      <td>₹39,990</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Celeron Dual Core</td>\n",
              "      <td>Yes</td>\n",
              "      <td>256 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR5</td>\n",
              "      <td>N4020</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>₹47,990</td>\n",
              "      <td>5,674 Ratings &amp; 292 Reviews</td>\n",
              "      <td>23% off</td>\n",
              "      <td>₹62,526</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated Iris Xe</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>HP Pavilion Intel Core i5 12th Gen 1235U - (16...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>₹56,990</td>\n",
              "      <td>2,011 Ratings &amp; 149 Reviews</td>\n",
              "      <td>22% off</td>\n",
              "      <td>₹73,688</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated UHD Graphics</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8063d8e-a1fd-42cb-a2e9-fcf261c8fdaa')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a8063d8e-a1fd-42cb-a2e9-fcf261c8fdaa button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a8063d8e-a1fd-42cb-a2e9-fcf261c8fdaa');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9b08c809-f5c4-42a2-b83d-b13e7c42542e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9b08c809-f5c4-42a2-b83d-b13e7c42542e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9b08c809-f5c4-42a2-b83d-b13e7c42542e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 912,\n  \"fields\": [\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 514,\n        \"samples\": [\n          \"MSI Sword 16 HX Intel Core i7 14th Gen 14700HX - (16 GB/1 TB SSD/Windows 11 Home/8 GB Graphics/NVIDIA ...\",\n          \"Lenovo LOQ Intel Core i7 13th Gen 13650HX - (16 GB/512 GB SSD/Windows 11 Pro/6 GB Graphics/NVIDIA GeFo...\",\n          \"DELL Vostro Intel Core i3 11th Gen 1115G4 - (4 GB/1 TB HDD/256 GB SSD/Windows 10 Home) Vostro 3400 Thi...\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"3.3\",\n          \"3\",\n          \"4.3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 299,\n        \"samples\": [\n          \"\\u20b931,800\",\n          \"\\u20b91,76,490\",\n          \"\\u20b952,100\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Ratings and Reviews\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 356,\n        \"samples\": [\n          \"10 Ratings\\u00a0&\\u00a01 Reviews\",\n          \"782 Ratings\\u00a0&\\u00a0125 Reviews\",\n          \"72 Ratings\\u00a0&\\u00a011 Reviews\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 61,\n        \"samples\": [\n          \"38% off\",\n          \"20% off\",\n          \"9% off\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Before Discount\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 369,\n        \"samples\": [\n          \"\\u20b941,990\",\n          \"\\u20b942,590\",\n          \"\\u20b970,990\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"AMD\",\n          \"Apple\",\n          \"MediaTek\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"M3 Max\",\n          \"M4\",\n          \"MT8183\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD Capacity\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"256 GB\",\n          \"2 TB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"16 GB\",\n          \"8 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"DDR4\",\n          \"DDR5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Variant\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 110,\n        \"samples\": [\n          \"7530U\",\n          \"7430U\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Graphic Processor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 71,\n        \"samples\": [\n          \"Qualcomm Adreno Adreno\",\n          \"NVIDIA GeForce RTX 2050\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Storage Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"eMMC\",\n          \"UFS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9-_LTAaCP-I0",
        "outputId": "08d2a5c8-8bb8-4370-9b8d-9ef2eb33a591"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 912 entries, 0 to 911\n",
            "Data columns (total 15 columns):\n",
            " #   Column                         Non-Null Count  Dtype \n",
            "---  ------                         --------------  ----- \n",
            " 0   Product Name                   912 non-null    object\n",
            " 1   Rating                         912 non-null    object\n",
            " 2   Price                          912 non-null    object\n",
            " 3   Number of Ratings and Reviews  912 non-null    object\n",
            " 4   Discount                       912 non-null    object\n",
            " 5   Price Before Discount          912 non-null    object\n",
            " 6   Processor Brand                858 non-null    object\n",
            " 7   Processor Name                 858 non-null    object\n",
            " 8   SSD                            858 non-null    object\n",
            " 9   SSD Capacity                   838 non-null    object\n",
            " 10  RAM                            858 non-null    object\n",
            " 11  RAM Type                       858 non-null    object\n",
            " 12  Processor Variant              801 non-null    object\n",
            " 13  Graphic Processor              801 non-null    object\n",
            " 14  Storage Type                   858 non-null    object\n",
            "dtypes: object(15)\n",
            "memory usage: 107.0+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Dropping Some rows with missing values -> Like ['Processor Brand', 'RAM', 'Price'] have"
      ],
      "metadata": {
        "id": "Dt1P1zbSRCw1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.dropna(subset=['Processor Brand', 'RAM', 'Price'], inplace=True)"
      ],
      "metadata": {
        "id": "qbInNCVzQIH7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 805
        },
        "id": "hZwKNztHReoz",
        "outputId": "f183efa1-6c65-453f-d8e3-834006334fe5"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          Product Name Rating    Price  \\\n",
              "0    Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...    4.3  ₹51,990   \n",
              "1    CHUWI Intel Celeron Dual Core 11th Gen N4020 -...    3.7  ₹18,990   \n",
              "2    HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...    4.2  ₹47,990   \n",
              "3    HP Pavilion Intel Core i5 12th Gen 1235U - (16...    4.3  ₹56,990   \n",
              "4    ASUS ExpertBook B14 Intel Core i3 12th Gen 121...    4.3  ₹32,990   \n",
              "..                                                 ...    ...      ...   \n",
              "907  DELL Inspiron Intel Core i5 12th Gen Core i5 -...    4.2  ₹45,499   \n",
              "908  Infinix GT Book Intel Core i5 12th Gen 12450H ...    4.2  ₹53,990   \n",
              "909  Acer Predator Neo Intel Core i5 13th Gen 13500...    4.4  ₹94,990   \n",
              "910  DELL Inspiron Intel Core i5 11th Gen 1135G7 - ...    4.1  ₹48,990   \n",
              "911  Lenovo IdeaPad Slim 5i Intel Core i5 11th Gen ...    4.2  ₹62,999   \n",
              "\n",
              "    Number of Ratings and Reviews Discount Price Before Discount  \\\n",
              "0     1,558 Ratings & 117 Reviews  38% off               ₹84,999   \n",
              "1     1,151 Ratings & 133 Reviews  52% off               ₹39,990   \n",
              "2     5,674 Ratings & 292 Reviews  23% off               ₹62,526   \n",
              "3     2,011 Ratings & 149 Reviews  22% off               ₹73,688   \n",
              "4        252 Ratings & 22 Reviews  35% off               ₹50,990   \n",
              "..                            ...      ...                   ...   \n",
              "907        72 Ratings & 4 Reviews  30% off               ₹65,100   \n",
              "908      366 Ratings & 62 Reviews  46% off               ₹99,990   \n",
              "909      724 Ratings & 74 Reviews  26% off             ₹1,29,999   \n",
              "910      233 Ratings & 21 Reviews  31% off               ₹71,820   \n",
              "911       118 Ratings & 8 Reviews  38% off             ₹1,03,233   \n",
              "\n",
              "    Processor Brand     Processor Name  SSD SSD Capacity    RAM RAM Type  \\\n",
              "0             Intel            Core i5  Yes       512 GB  16 GB     DDR4   \n",
              "1             Intel  Celeron Dual Core  Yes       256 GB   8 GB     DDR5   \n",
              "2             Intel            Core i5  Yes       512 GB  16 GB     DDR4   \n",
              "3             Intel            Core i5  Yes       512 GB  16 GB     DDR4   \n",
              "4             Intel            Core i3  Yes       512 GB   8 GB     DDR4   \n",
              "..              ...                ...  ...          ...    ...      ...   \n",
              "907           Intel            Core i5  Yes       512 GB   8 GB     DDR4   \n",
              "908           Intel            Core i5  Yes       512 GB  16 GB   LPDDR5   \n",
              "909           Intel            Core i5  Yes       512 GB  16 GB     DDR5   \n",
              "910           Intel            Core i5  Yes       512 GB   8 GB     DDR4   \n",
              "911           Intel            Core i5  Yes       512 GB  16 GB     DDR4   \n",
              "\n",
              "    Processor Variant                    Graphic Processor Storage Type  \n",
              "0              13420H              NVIDIA GeForce RTX 2050          SSD  \n",
              "1               N4020                 Intel Integrated UHD          SSD  \n",
              "2               1235U             Intel Integrated Iris Xe          SSD  \n",
              "3               1235U        Intel Integrated UHD Graphics          SSD  \n",
              "4               1215U                 Intel Integrated UHD          SSD  \n",
              "..                ...                                  ...          ...  \n",
              "907           Core i5  Intel Integrated Intel UHD Graphics          SSD  \n",
              "908            12450H              NVIDIA GeForce RTX 3050          SSD  \n",
              "909           13500HX              NVIDIA GeForce RTX 4050          SSD  \n",
              "910            1135G7                 Intel Integrated UHD          SSD  \n",
              "911            1135G7                 NVIDIA GeForce MX450          SSD  \n",
              "\n",
              "[858 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fb95c116-2e2e-47a5-82bf-ff859369ca49\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Product Name</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Price</th>\n",
              "      <th>Number of Ratings and Reviews</th>\n",
              "      <th>Discount</th>\n",
              "      <th>Price Before Discount</th>\n",
              "      <th>Processor Brand</th>\n",
              "      <th>Processor Name</th>\n",
              "      <th>SSD</th>\n",
              "      <th>SSD Capacity</th>\n",
              "      <th>RAM</th>\n",
              "      <th>RAM Type</th>\n",
              "      <th>Processor Variant</th>\n",
              "      <th>Graphic Processor</th>\n",
              "      <th>Storage Type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>₹51,990</td>\n",
              "      <td>1,558 Ratings &amp; 117 Reviews</td>\n",
              "      <td>38% off</td>\n",
              "      <td>₹84,999</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>13420H</td>\n",
              "      <td>NVIDIA GeForce RTX 2050</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>CHUWI Intel Celeron Dual Core 11th Gen N4020 -...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>₹18,990</td>\n",
              "      <td>1,151 Ratings &amp; 133 Reviews</td>\n",
              "      <td>52% off</td>\n",
              "      <td>₹39,990</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Celeron Dual Core</td>\n",
              "      <td>Yes</td>\n",
              "      <td>256 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR5</td>\n",
              "      <td>N4020</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>₹47,990</td>\n",
              "      <td>5,674 Ratings &amp; 292 Reviews</td>\n",
              "      <td>23% off</td>\n",
              "      <td>₹62,526</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated Iris Xe</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>HP Pavilion Intel Core i5 12th Gen 1235U - (16...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>₹56,990</td>\n",
              "      <td>2,011 Ratings &amp; 149 Reviews</td>\n",
              "      <td>22% off</td>\n",
              "      <td>₹73,688</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated UHD Graphics</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ASUS ExpertBook B14 Intel Core i3 12th Gen 121...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>₹32,990</td>\n",
              "      <td>252 Ratings &amp; 22 Reviews</td>\n",
              "      <td>35% off</td>\n",
              "      <td>₹50,990</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i3</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1215U</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>907</th>\n",
              "      <td>DELL Inspiron Intel Core i5 12th Gen Core i5 -...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>₹45,499</td>\n",
              "      <td>72 Ratings &amp; 4 Reviews</td>\n",
              "      <td>30% off</td>\n",
              "      <td>₹65,100</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Intel Integrated Intel UHD Graphics</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>908</th>\n",
              "      <td>Infinix GT Book Intel Core i5 12th Gen 12450H ...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>₹53,990</td>\n",
              "      <td>366 Ratings &amp; 62 Reviews</td>\n",
              "      <td>46% off</td>\n",
              "      <td>₹99,990</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>LPDDR5</td>\n",
              "      <td>12450H</td>\n",
              "      <td>NVIDIA GeForce RTX 3050</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>909</th>\n",
              "      <td>Acer Predator Neo Intel Core i5 13th Gen 13500...</td>\n",
              "      <td>4.4</td>\n",
              "      <td>₹94,990</td>\n",
              "      <td>724 Ratings &amp; 74 Reviews</td>\n",
              "      <td>26% off</td>\n",
              "      <td>₹1,29,999</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR5</td>\n",
              "      <td>13500HX</td>\n",
              "      <td>NVIDIA GeForce RTX 4050</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>910</th>\n",
              "      <td>DELL Inspiron Intel Core i5 11th Gen 1135G7 - ...</td>\n",
              "      <td>4.1</td>\n",
              "      <td>₹48,990</td>\n",
              "      <td>233 Ratings &amp; 21 Reviews</td>\n",
              "      <td>31% off</td>\n",
              "      <td>₹71,820</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1135G7</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>911</th>\n",
              "      <td>Lenovo IdeaPad Slim 5i Intel Core i5 11th Gen ...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>₹62,999</td>\n",
              "      <td>118 Ratings &amp; 8 Reviews</td>\n",
              "      <td>38% off</td>\n",
              "      <td>₹1,03,233</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1135G7</td>\n",
              "      <td>NVIDIA GeForce MX450</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>858 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb95c116-2e2e-47a5-82bf-ff859369ca49')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fb95c116-2e2e-47a5-82bf-ff859369ca49 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fb95c116-2e2e-47a5-82bf-ff859369ca49');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f9792827-48d9-44a2-8b50-cd2555af5703\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9792827-48d9-44a2-8b50-cd2555af5703')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f9792827-48d9-44a2-8b50-cd2555af5703 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_abc4b704-d5c5-4fd7-a802-2ce6f082862a\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_abc4b704-d5c5-4fd7-a802-2ce6f082862a button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 858,\n  \"fields\": [\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 485,\n        \"samples\": [\n          \"Lenovo IdeaPad Gaming 3 AMD Ryzen 5 Hexa Core 7535HS - (16 GB/512 GB SSD/Windows 11 Home/4 GB Graphics...\",\n          \"DELL Inspiron 3520 Intel Core i5 12th Gen 1235U - (8 GB/512 GB SSD/Windows 11 Home) 0IN352010031RINB1M...\",\n          \"Lenovo V15 Series AMD Athlon Dual Core 7120U - (8 GB/512 GB SSD/Windows 11 Home) V15 Thin and Light La...\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"3.3\",\n          \"3\",\n          \"4.3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 288,\n        \"samples\": [\n          \"\\u20b931,900\",\n          \"\\u20b959,994\",\n          \"\\u20b91,94,990\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Ratings and Reviews\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 343,\n        \"samples\": [\n          \"245 Ratings\\u00a0&\\u00a030 Reviews\",\n          \"83 Ratings\\u00a0&\\u00a07 Reviews\",\n          \"447 Ratings\\u00a0&\\u00a032 Reviews\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"38% off\",\n          \"20% off\",\n          \"29% off\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Before Discount\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 349,\n        \"samples\": [\n          \"\\u20b985,990\",\n          \"\\u20b91,49,990\",\n          \"\\u20b990,783\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"AMD\",\n          \"Apple\",\n          \"MediaTek\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"M3 Max\",\n          \"M4\",\n          \"MT8183\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD Capacity\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"256 GB\",\n          \"2 TB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"16 GB\",\n          \"8 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"DDR4\",\n          \"DDR5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Variant\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 110,\n        \"samples\": [\n          \"7530U\",\n          \"7430U\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Graphic Processor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 71,\n        \"samples\": [\n          \"Qualcomm Adreno Adreno\",\n          \"NVIDIA GeForce RTX 2050\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Storage Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"eMMC\",\n          \"UFS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hpIJWy-JRfW3",
        "outputId": "ef76a1cf-a5c5-4737-e09c-4b1faef6d846"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 858 entries, 0 to 911\n",
            "Data columns (total 15 columns):\n",
            " #   Column                         Non-Null Count  Dtype \n",
            "---  ------                         --------------  ----- \n",
            " 0   Product Name                   858 non-null    object\n",
            " 1   Rating                         858 non-null    object\n",
            " 2   Price                          858 non-null    object\n",
            " 3   Number of Ratings and Reviews  858 non-null    object\n",
            " 4   Discount                       858 non-null    object\n",
            " 5   Price Before Discount          858 non-null    object\n",
            " 6   Processor Brand                858 non-null    object\n",
            " 7   Processor Name                 858 non-null    object\n",
            " 8   SSD                            858 non-null    object\n",
            " 9   SSD Capacity                   838 non-null    object\n",
            " 10  RAM                            858 non-null    object\n",
            " 11  RAM Type                       858 non-null    object\n",
            " 12  Processor Variant              801 non-null    object\n",
            " 13  Graphic Processor              801 non-null    object\n",
            " 14  Storage Type                   858 non-null    object\n",
            "dtypes: object(15)\n",
            "memory usage: 107.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['SSD Capacity'].head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "id": "C6QSN5ksRjR7",
        "outputId": "c2a16b38-07b6-41dc-9397-de2dc13e05c1"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    512 GB\n",
              "1    256 GB\n",
              "2    512 GB\n",
              "3    512 GB\n",
              "4    512 GB\n",
              "Name: SSD Capacity, dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SSD Capacity</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>512 GB</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>256 GB</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>512 GB</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>512 GB</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>512 GB</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Replacing unknown values in SSD Capacity to its mode"
      ],
      "metadata": {
        "id": "gHhXh_v5SMjc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['SSD Capacity'] = df['SSD Capacity'].fillna(df['SSD Capacity'].mode())"
      ],
      "metadata": {
        "id": "G1QwE8H3RvtQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['Processor Brand'] = df['Processor Brand'].fillna('Unknown')"
      ],
      "metadata": {
        "id": "w-V3IFv7SVzQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T6KqSrwQSibW",
        "outputId": "4ffe4048-ee44-4d68-9c75-97b092d02737"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 858 entries, 0 to 911\n",
            "Data columns (total 15 columns):\n",
            " #   Column                         Non-Null Count  Dtype \n",
            "---  ------                         --------------  ----- \n",
            " 0   Product Name                   858 non-null    object\n",
            " 1   Rating                         858 non-null    object\n",
            " 2   Price                          858 non-null    object\n",
            " 3   Number of Ratings and Reviews  858 non-null    object\n",
            " 4   Discount                       858 non-null    object\n",
            " 5   Price Before Discount          858 non-null    object\n",
            " 6   Processor Brand                858 non-null    object\n",
            " 7   Processor Name                 858 non-null    object\n",
            " 8   SSD                            858 non-null    object\n",
            " 9   SSD Capacity                   838 non-null    object\n",
            " 10  RAM                            858 non-null    object\n",
            " 11  RAM Type                       858 non-null    object\n",
            " 12  Processor Variant              801 non-null    object\n",
            " 13  Graphic Processor              801 non-null    object\n",
            " 14  Storage Type                   858 non-null    object\n",
            "dtypes: object(15)\n",
            "memory usage: 107.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Filling (SSD Capacity, Processor Variant, Graphic Processor) with unknown"
      ],
      "metadata": {
        "id": "u8N2xGn9TcJU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['SSD Capacity'].fillna('Unknown', inplace=True)\n",
        "df['Processor Variant'].fillna('Unknown', inplace=True)\n",
        "df['Graphic Processor'].fillna('Unknown', inplace=True)"
      ],
      "metadata": {
        "id": "xqEILNWBS6UH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jVYzSBP1Tgxg",
        "outputId": "275b62c2-72af-436a-b55c-d90bae060ab7"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 858 entries, 0 to 911\n",
            "Data columns (total 15 columns):\n",
            " #   Column                         Non-Null Count  Dtype \n",
            "---  ------                         --------------  ----- \n",
            " 0   Product Name                   858 non-null    object\n",
            " 1   Rating                         858 non-null    object\n",
            " 2   Price                          858 non-null    object\n",
            " 3   Number of Ratings and Reviews  858 non-null    object\n",
            " 4   Discount                       858 non-null    object\n",
            " 5   Price Before Discount          858 non-null    object\n",
            " 6   Processor Brand                858 non-null    object\n",
            " 7   Processor Name                 858 non-null    object\n",
            " 8   SSD                            858 non-null    object\n",
            " 9   SSD Capacity                   858 non-null    object\n",
            " 10  RAM                            858 non-null    object\n",
            " 11  RAM Type                       858 non-null    object\n",
            " 12  Processor Variant              858 non-null    object\n",
            " 13  Graphic Processor              858 non-null    object\n",
            " 14  Storage Type                   858 non-null    object\n",
            "dtypes: object(15)\n",
            "memory usage: 107.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Additional Data Cleaning**"
      ],
      "metadata": {
        "id": "BxfOovdqUIK-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Price (Removing currency symbols and commas, then converting it to float)"
      ],
      "metadata": {
        "id": "QVUukqz_Uz0y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['Price'].head(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 147
        },
        "id": "JDgVMUePUETj",
        "outputId": "0739df11-5a45-45b3-fca7-2a1b9f19e149"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    ₹51,990\n",
              "1    ₹18,990\n",
              "Name: Price, dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Price</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>₹51,990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>₹18,990</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.loc[:, 'Price'] = df['Price'].replace({'₹': '', ',': ''}, regex=True)\n",
        "df.loc[:, 'Price'] = pd.to_numeric(df['Price'], errors='coerce')"
      ],
      "metadata": {
        "id": "hQIs-Rm0VkCy"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Clean 'Price Before Discount' column by removing currency symbol and commas\n",
        "df.loc[:, 'Price Before Discount'] = df['Price Before Discount'].replace({'₹': '', ',': ''}, regex=True)\n",
        "\n",
        "# Convert 'Price Before Discount' to numeric (non-numeric values will become NaN)\n",
        "df.loc[:, 'Price Before Discount'] = pd.to_numeric(df['Price Before Discount'], errors='coerce')\n",
        "\n",
        "# Handle NaN values after conversion (drop or fill)\n",
        "df['Price Before Discount'] = df['Price Before Discount'].fillna(df['Price Before Discount'].mean())\n"
      ],
      "metadata": {
        "id": "7fZ0pXRJVr4e"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tsU1SgZfWe0k",
        "outputId": "dbcf0233-90d2-4175-815e-8543a5a342a6"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 858 entries, 0 to 911\n",
            "Data columns (total 15 columns):\n",
            " #   Column                         Non-Null Count  Dtype  \n",
            "---  ------                         --------------  -----  \n",
            " 0   Product Name                   858 non-null    object \n",
            " 1   Rating                         858 non-null    object \n",
            " 2   Price                          858 non-null    object \n",
            " 3   Number of Ratings and Reviews  858 non-null    object \n",
            " 4   Discount                       858 non-null    object \n",
            " 5   Price Before Discount          858 non-null    float64\n",
            " 6   Processor Brand                858 non-null    object \n",
            " 7   Processor Name                 858 non-null    object \n",
            " 8   SSD                            858 non-null    object \n",
            " 9   SSD Capacity                   858 non-null    object \n",
            " 10  RAM                            858 non-null    object \n",
            " 11  RAM Type                       858 non-null    object \n",
            " 12  Processor Variant              858 non-null    object \n",
            " 13  Graphic Processor              858 non-null    object \n",
            " 14  Storage Type                   858 non-null    object \n",
            "dtypes: float64(1), object(14)\n",
            "memory usage: 107.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 181
        },
        "id": "haer0ZmfW0V9",
        "outputId": "f94cc0a7-6c49-4057-ca41-6470fa54e38c"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        Product Name Rating  Price  \\\n",
              "0  Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...    4.3  51990   \n",
              "1  CHUWI Intel Celeron Dual Core 11th Gen N4020 -...    3.7  18990   \n",
              "\n",
              "  Number of Ratings and Reviews Discount  Price Before Discount  \\\n",
              "0   1,558 Ratings & 117 Reviews  38% off                84999.0   \n",
              "1   1,151 Ratings & 133 Reviews  52% off                39990.0   \n",
              "\n",
              "  Processor Brand     Processor Name  SSD SSD Capacity    RAM RAM Type  \\\n",
              "0           Intel            Core i5  Yes       512 GB  16 GB     DDR4   \n",
              "1           Intel  Celeron Dual Core  Yes       256 GB   8 GB     DDR5   \n",
              "\n",
              "  Processor Variant        Graphic Processor Storage Type  \n",
              "0            13420H  NVIDIA GeForce RTX 2050          SSD  \n",
              "1             N4020     Intel Integrated UHD          SSD  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1ebf7fc9-8864-4153-be90-bc927a29ec9c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Product Name</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Price</th>\n",
              "      <th>Number of Ratings and Reviews</th>\n",
              "      <th>Discount</th>\n",
              "      <th>Price Before Discount</th>\n",
              "      <th>Processor Brand</th>\n",
              "      <th>Processor Name</th>\n",
              "      <th>SSD</th>\n",
              "      <th>SSD Capacity</th>\n",
              "      <th>RAM</th>\n",
              "      <th>RAM Type</th>\n",
              "      <th>Processor Variant</th>\n",
              "      <th>Graphic Processor</th>\n",
              "      <th>Storage Type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>51990</td>\n",
              "      <td>1,558 Ratings &amp; 117 Reviews</td>\n",
              "      <td>38% off</td>\n",
              "      <td>84999.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>13420H</td>\n",
              "      <td>NVIDIA GeForce RTX 2050</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>CHUWI Intel Celeron Dual Core 11th Gen N4020 -...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>18990</td>\n",
              "      <td>1,151 Ratings &amp; 133 Reviews</td>\n",
              "      <td>52% off</td>\n",
              "      <td>39990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Celeron Dual Core</td>\n",
              "      <td>Yes</td>\n",
              "      <td>256 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR5</td>\n",
              "      <td>N4020</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ebf7fc9-8864-4153-be90-bc927a29ec9c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1ebf7fc9-8864-4153-be90-bc927a29ec9c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1ebf7fc9-8864-4153-be90-bc927a29ec9c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-61f478fe-860a-4f5b-ad6b-a5c9a9b87ddb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-61f478fe-860a-4f5b-ad6b-a5c9a9b87ddb')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-61f478fe-860a-4f5b-ad6b-a5c9a9b87ddb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 858,\n  \"fields\": [\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 485,\n        \"samples\": [\n          \"Lenovo IdeaPad Gaming 3 AMD Ryzen 5 Hexa Core 7535HS - (16 GB/512 GB SSD/Windows 11 Home/4 GB Graphics...\",\n          \"DELL Inspiron 3520 Intel Core i5 12th Gen 1235U - (8 GB/512 GB SSD/Windows 11 Home) 0IN352010031RINB1M...\",\n          \"Lenovo V15 Series AMD Athlon Dual Core 7120U - (8 GB/512 GB SSD/Windows 11 Home) V15 Thin and Light La...\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"3.3\",\n          \"3\",\n          \"4.3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 9990,\n        \"max\": 345990,\n        \"num_unique_values\": 288,\n        \"samples\": [\n          31900,\n          59994,\n          194990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Ratings and Reviews\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 343,\n        \"samples\": [\n          \"245 Ratings\\u00a0&\\u00a030 Reviews\",\n          \"83 Ratings\\u00a0&\\u00a07 Reviews\",\n          \"447 Ratings\\u00a0&\\u00a032 Reviews\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"38% off\",\n          \"20% off\",\n          \"29% off\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Before Discount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41682.887429397095,\n        \"min\": 20990.0,\n        \"max\": 399900.0,\n        \"num_unique_values\": 349,\n        \"samples\": [\n          85990.0,\n          149990.0,\n          90783.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"AMD\",\n          \"Apple\",\n          \"MediaTek\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"M3 Max\",\n          \"M4\",\n          \"MT8183\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD Capacity\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"512 GB\",\n          \"256 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"16 GB\",\n          \"8 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"DDR4\",\n          \"DDR5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Variant\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 111,\n        \"samples\": [\n          \"1360P\",\n          \"1305U\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Graphic Processor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"Intel Integrated Intel\",\n          \"AMD Radeon RX 6600M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Storage Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"eMMC\",\n          \"UFS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# First, ensure 'Number of Ratings and Reviews' is in the correct format for extraction\n",
        "df['Number of Ratings and Reviews'] = df['Number of Ratings and Reviews'].fillna('0 Ratings & 0 Reviews')\n",
        "\n",
        "# Extract Ratings Count and Reviews Count using a more robust regex pattern\n",
        "df[['Ratings Count', 'Reviews Count']] = df['Number of Ratings and Reviews'].str.extract(r'(\\d{1,3}(?:,\\d{3})*)\\sRatings\\s*&\\s*(\\d{1,3}(?:,\\d{3})*)\\sReviews')\n",
        "\n",
        "# Remove commas from the extracted counts and convert them to numeric values\n",
        "df['Ratings Count'] = df['Ratings Count'].replace({',': ''}, regex=True).astype(float)\n",
        "df['Reviews Count'] = df['Reviews Count'].replace({',': ''}, regex=True).astype(float)\n",
        "\n",
        "# Fill NaN values in 'Reviews Count' with 0 (if any)\n",
        "df['Reviews Count'] = df['Reviews Count'].fillna(0)"
      ],
      "metadata": {
        "collapsed": true,
        "id": "oYX3h5_nXK-M"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "alo-KyRuXrlF",
        "outputId": "2d2270c1-46ee-4b68-9772-2ccb9c24ccf3"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        Product Name Rating  Price  \\\n",
              "0  Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...    4.3  51990   \n",
              "1  CHUWI Intel Celeron Dual Core 11th Gen N4020 -...    3.7  18990   \n",
              "2  HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...    4.2  47990   \n",
              "3  HP Pavilion Intel Core i5 12th Gen 1235U - (16...    4.3  56990   \n",
              "4  ASUS ExpertBook B14 Intel Core i3 12th Gen 121...    4.3  32990   \n",
              "\n",
              "  Number of Ratings and Reviews Discount  Price Before Discount  \\\n",
              "0   1,558 Ratings & 117 Reviews  38% off                84999.0   \n",
              "1   1,151 Ratings & 133 Reviews  52% off                39990.0   \n",
              "2   5,674 Ratings & 292 Reviews  23% off                62526.0   \n",
              "3   2,011 Ratings & 149 Reviews  22% off                73688.0   \n",
              "4      252 Ratings & 22 Reviews  35% off                50990.0   \n",
              "\n",
              "  Processor Brand     Processor Name  SSD SSD Capacity    RAM RAM Type  \\\n",
              "0           Intel            Core i5  Yes       512 GB  16 GB     DDR4   \n",
              "1           Intel  Celeron Dual Core  Yes       256 GB   8 GB     DDR5   \n",
              "2           Intel            Core i5  Yes       512 GB  16 GB     DDR4   \n",
              "3           Intel            Core i5  Yes       512 GB  16 GB     DDR4   \n",
              "4           Intel            Core i3  Yes       512 GB   8 GB     DDR4   \n",
              "\n",
              "  Processor Variant              Graphic Processor Storage Type  \\\n",
              "0            13420H        NVIDIA GeForce RTX 2050          SSD   \n",
              "1             N4020           Intel Integrated UHD          SSD   \n",
              "2             1235U       Intel Integrated Iris Xe          SSD   \n",
              "3             1235U  Intel Integrated UHD Graphics          SSD   \n",
              "4             1215U           Intel Integrated UHD          SSD   \n",
              "\n",
              "   Ratings Count  Reviews Count  \n",
              "0         1558.0          117.0  \n",
              "1         1151.0          133.0  \n",
              "2         5674.0          292.0  \n",
              "3         2011.0          149.0  \n",
              "4          252.0           22.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8685c9ec-1c41-4382-a7ec-2552caed823b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Product Name</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Price</th>\n",
              "      <th>Number of Ratings and Reviews</th>\n",
              "      <th>Discount</th>\n",
              "      <th>Price Before Discount</th>\n",
              "      <th>Processor Brand</th>\n",
              "      <th>Processor Name</th>\n",
              "      <th>SSD</th>\n",
              "      <th>SSD Capacity</th>\n",
              "      <th>RAM</th>\n",
              "      <th>RAM Type</th>\n",
              "      <th>Processor Variant</th>\n",
              "      <th>Graphic Processor</th>\n",
              "      <th>Storage Type</th>\n",
              "      <th>Ratings Count</th>\n",
              "      <th>Reviews Count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>51990</td>\n",
              "      <td>1,558 Ratings &amp; 117 Reviews</td>\n",
              "      <td>38% off</td>\n",
              "      <td>84999.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>13420H</td>\n",
              "      <td>NVIDIA GeForce RTX 2050</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1558.0</td>\n",
              "      <td>117.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>CHUWI Intel Celeron Dual Core 11th Gen N4020 -...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>18990</td>\n",
              "      <td>1,151 Ratings &amp; 133 Reviews</td>\n",
              "      <td>52% off</td>\n",
              "      <td>39990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Celeron Dual Core</td>\n",
              "      <td>Yes</td>\n",
              "      <td>256 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR5</td>\n",
              "      <td>N4020</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1151.0</td>\n",
              "      <td>133.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>47990</td>\n",
              "      <td>5,674 Ratings &amp; 292 Reviews</td>\n",
              "      <td>23% off</td>\n",
              "      <td>62526.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated Iris Xe</td>\n",
              "      <td>SSD</td>\n",
              "      <td>5674.0</td>\n",
              "      <td>292.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>HP Pavilion Intel Core i5 12th Gen 1235U - (16...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>56990</td>\n",
              "      <td>2,011 Ratings &amp; 149 Reviews</td>\n",
              "      <td>22% off</td>\n",
              "      <td>73688.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated UHD Graphics</td>\n",
              "      <td>SSD</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>149.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ASUS ExpertBook B14 Intel Core i3 12th Gen 121...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>32990</td>\n",
              "      <td>252 Ratings &amp; 22 Reviews</td>\n",
              "      <td>35% off</td>\n",
              "      <td>50990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i3</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1215U</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>252.0</td>\n",
              "      <td>22.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8685c9ec-1c41-4382-a7ec-2552caed823b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8685c9ec-1c41-4382-a7ec-2552caed823b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8685c9ec-1c41-4382-a7ec-2552caed823b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-de4af1ad-dff2-40ed-ab3b-12c2e444b785\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-de4af1ad-dff2-40ed-ab3b-12c2e444b785')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-de4af1ad-dff2-40ed-ab3b-12c2e444b785 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 858,\n  \"fields\": [\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 485,\n        \"samples\": [\n          \"Lenovo IdeaPad Gaming 3 AMD Ryzen 5 Hexa Core 7535HS - (16 GB/512 GB SSD/Windows 11 Home/4 GB Graphics...\",\n          \"DELL Inspiron 3520 Intel Core i5 12th Gen 1235U - (8 GB/512 GB SSD/Windows 11 Home) 0IN352010031RINB1M...\",\n          \"Lenovo V15 Series AMD Athlon Dual Core 7120U - (8 GB/512 GB SSD/Windows 11 Home) V15 Thin and Light La...\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"3.3\",\n          \"3\",\n          \"4.3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 9990,\n        \"max\": 345990,\n        \"num_unique_values\": 288,\n        \"samples\": [\n          31900,\n          59994,\n          194990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Ratings and Reviews\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 343,\n        \"samples\": [\n          \"245 Ratings\\u00a0&\\u00a030 Reviews\",\n          \"83 Ratings\\u00a0&\\u00a07 Reviews\",\n          \"447 Ratings\\u00a0&\\u00a032 Reviews\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"38% off\",\n          \"20% off\",\n          \"29% off\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Before Discount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41682.887429397095,\n        \"min\": 20990.0,\n        \"max\": 399900.0,\n        \"num_unique_values\": 349,\n        \"samples\": [\n          85990.0,\n          149990.0,\n          90783.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"AMD\",\n          \"Apple\",\n          \"MediaTek\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"M3 Max\",\n          \"M4\",\n          \"MT8183\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD Capacity\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"512 GB\",\n          \"256 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"16 GB\",\n          \"8 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"DDR4\",\n          \"DDR5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Variant\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 111,\n        \"samples\": [\n          \"1360P\",\n          \"1305U\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Graphic Processor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"Intel Integrated Intel\",\n          \"AMD Radeon RX 6600M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Storage Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"eMMC\",\n          \"UFS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ratings Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2124.597515498934,\n        \"min\": 2.0,\n        \"max\": 17214.0,\n        \"num_unique_values\": 271,\n        \"samples\": [\n          445.0,\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 153.16684996096131,\n        \"min\": 0.0,\n        \"max\": 1355.0,\n        \"num_unique_values\": 135,\n        \"samples\": [\n          68.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop(columns=['Number of Ratings and Reviews'], inplace=True)"
      ],
      "metadata": {
        "id": "NlGPBp2_YFrx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 379
        },
        "id": "H_rslH_EZQyE",
        "outputId": "d3b2ef8f-15c7-4180-da33-2ab9391670a5"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        Product Name Rating  Price Discount  \\\n",
              "0  Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...    4.3  51990  38% off   \n",
              "1  CHUWI Intel Celeron Dual Core 11th Gen N4020 -...    3.7  18990  52% off   \n",
              "2  HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...    4.2  47990  23% off   \n",
              "3  HP Pavilion Intel Core i5 12th Gen 1235U - (16...    4.3  56990  22% off   \n",
              "4  ASUS ExpertBook B14 Intel Core i3 12th Gen 121...    4.3  32990  35% off   \n",
              "\n",
              "   Price Before Discount Processor Brand     Processor Name  SSD SSD Capacity  \\\n",
              "0                84999.0           Intel            Core i5  Yes       512 GB   \n",
              "1                39990.0           Intel  Celeron Dual Core  Yes       256 GB   \n",
              "2                62526.0           Intel            Core i5  Yes       512 GB   \n",
              "3                73688.0           Intel            Core i5  Yes       512 GB   \n",
              "4                50990.0           Intel            Core i3  Yes       512 GB   \n",
              "\n",
              "     RAM RAM Type Processor Variant              Graphic Processor  \\\n",
              "0  16 GB     DDR4            13420H        NVIDIA GeForce RTX 2050   \n",
              "1   8 GB     DDR5             N4020           Intel Integrated UHD   \n",
              "2  16 GB     DDR4             1235U       Intel Integrated Iris Xe   \n",
              "3  16 GB     DDR4             1235U  Intel Integrated UHD Graphics   \n",
              "4   8 GB     DDR4             1215U           Intel Integrated UHD   \n",
              "\n",
              "  Storage Type  Ratings Count  Reviews Count  \n",
              "0          SSD         1558.0          117.0  \n",
              "1          SSD         1151.0          133.0  \n",
              "2          SSD         5674.0          292.0  \n",
              "3          SSD         2011.0          149.0  \n",
              "4          SSD          252.0           22.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e4eef285-c212-4ffe-88da-72844af79674\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Product Name</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Price</th>\n",
              "      <th>Discount</th>\n",
              "      <th>Price Before Discount</th>\n",
              "      <th>Processor Brand</th>\n",
              "      <th>Processor Name</th>\n",
              "      <th>SSD</th>\n",
              "      <th>SSD Capacity</th>\n",
              "      <th>RAM</th>\n",
              "      <th>RAM Type</th>\n",
              "      <th>Processor Variant</th>\n",
              "      <th>Graphic Processor</th>\n",
              "      <th>Storage Type</th>\n",
              "      <th>Ratings Count</th>\n",
              "      <th>Reviews Count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>51990</td>\n",
              "      <td>38% off</td>\n",
              "      <td>84999.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>13420H</td>\n",
              "      <td>NVIDIA GeForce RTX 2050</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1558.0</td>\n",
              "      <td>117.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>CHUWI Intel Celeron Dual Core 11th Gen N4020 -...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>18990</td>\n",
              "      <td>52% off</td>\n",
              "      <td>39990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Celeron Dual Core</td>\n",
              "      <td>Yes</td>\n",
              "      <td>256 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR5</td>\n",
              "      <td>N4020</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1151.0</td>\n",
              "      <td>133.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>47990</td>\n",
              "      <td>23% off</td>\n",
              "      <td>62526.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated Iris Xe</td>\n",
              "      <td>SSD</td>\n",
              "      <td>5674.0</td>\n",
              "      <td>292.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>HP Pavilion Intel Core i5 12th Gen 1235U - (16...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>56990</td>\n",
              "      <td>22% off</td>\n",
              "      <td>73688.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated UHD Graphics</td>\n",
              "      <td>SSD</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>149.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ASUS ExpertBook B14 Intel Core i3 12th Gen 121...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>32990</td>\n",
              "      <td>35% off</td>\n",
              "      <td>50990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i3</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1215U</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>252.0</td>\n",
              "      <td>22.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4eef285-c212-4ffe-88da-72844af79674')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e4eef285-c212-4ffe-88da-72844af79674 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e4eef285-c212-4ffe-88da-72844af79674');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d6cd9020-8fa0-43c4-ad03-e3791a57f45b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6cd9020-8fa0-43c4-ad03-e3791a57f45b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d6cd9020-8fa0-43c4-ad03-e3791a57f45b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 858,\n  \"fields\": [\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 485,\n        \"samples\": [\n          \"Lenovo IdeaPad Gaming 3 AMD Ryzen 5 Hexa Core 7535HS - (16 GB/512 GB SSD/Windows 11 Home/4 GB Graphics...\",\n          \"DELL Inspiron 3520 Intel Core i5 12th Gen 1235U - (8 GB/512 GB SSD/Windows 11 Home) 0IN352010031RINB1M...\",\n          \"Lenovo V15 Series AMD Athlon Dual Core 7120U - (8 GB/512 GB SSD/Windows 11 Home) V15 Thin and Light La...\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"3.3\",\n          \"3\",\n          \"4.3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 9990,\n        \"max\": 345990,\n        \"num_unique_values\": 288,\n        \"samples\": [\n          31900,\n          59994,\n          194990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"38% off\",\n          \"20% off\",\n          \"29% off\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Before Discount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41682.887429397095,\n        \"min\": 20990.0,\n        \"max\": 399900.0,\n        \"num_unique_values\": 349,\n        \"samples\": [\n          85990.0,\n          149990.0,\n          90783.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"AMD\",\n          \"Apple\",\n          \"MediaTek\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"M3 Max\",\n          \"M4\",\n          \"MT8183\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD Capacity\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"512 GB\",\n          \"256 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"16 GB\",\n          \"8 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"DDR4\",\n          \"DDR5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Variant\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 111,\n        \"samples\": [\n          \"1360P\",\n          \"1305U\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Graphic Processor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"Intel Integrated Intel\",\n          \"AMD Radeon RX 6600M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Storage Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"eMMC\",\n          \"UFS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ratings Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2124.597515498934,\n        \"min\": 2.0,\n        \"max\": 17214.0,\n        \"num_unique_values\": 271,\n        \"samples\": [\n          445.0,\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 153.16684996096131,\n        \"min\": 0.0,\n        \"max\": 1355.0,\n        \"num_unique_values\": 135,\n        \"samples\": [\n          68.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Extract Brand name from Product Name"
      ],
      "metadata": {
        "id": "kIkvFI2OZpFt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Use regular expression to extract the brand name (assuming it's the first word in the product name)\n",
        "df['Brand'] = df['Product Name'].str.extract(r'(^\\w+)')"
      ],
      "metadata": {
        "id": "B1wVG4U9ZTQz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 414
        },
        "id": "JNbuxJlTZvnI",
        "outputId": "f6eb2c91-b185-4f40-cb94-454d0afcb5bd"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        Product Name Rating  Price Discount  \\\n",
              "0  Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...    4.3  51990  38% off   \n",
              "1  CHUWI Intel Celeron Dual Core 11th Gen N4020 -...    3.7  18990  52% off   \n",
              "2  HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...    4.2  47990  23% off   \n",
              "3  HP Pavilion Intel Core i5 12th Gen 1235U - (16...    4.3  56990  22% off   \n",
              "4  ASUS ExpertBook B14 Intel Core i3 12th Gen 121...    4.3  32990  35% off   \n",
              "\n",
              "   Price Before Discount Processor Brand     Processor Name  SSD SSD Capacity  \\\n",
              "0                84999.0           Intel            Core i5  Yes       512 GB   \n",
              "1                39990.0           Intel  Celeron Dual Core  Yes       256 GB   \n",
              "2                62526.0           Intel            Core i5  Yes       512 GB   \n",
              "3                73688.0           Intel            Core i5  Yes       512 GB   \n",
              "4                50990.0           Intel            Core i3  Yes       512 GB   \n",
              "\n",
              "     RAM RAM Type Processor Variant              Graphic Processor  \\\n",
              "0  16 GB     DDR4            13420H        NVIDIA GeForce RTX 2050   \n",
              "1   8 GB     DDR5             N4020           Intel Integrated UHD   \n",
              "2  16 GB     DDR4             1235U       Intel Integrated Iris Xe   \n",
              "3  16 GB     DDR4             1235U  Intel Integrated UHD Graphics   \n",
              "4   8 GB     DDR4             1215U           Intel Integrated UHD   \n",
              "\n",
              "  Storage Type  Ratings Count  Reviews Count  Brand  \n",
              "0          SSD         1558.0          117.0   Acer  \n",
              "1          SSD         1151.0          133.0  CHUWI  \n",
              "2          SSD         5674.0          292.0     HP  \n",
              "3          SSD         2011.0          149.0     HP  \n",
              "4          SSD          252.0           22.0   ASUS  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c4bee46e-e2c4-46c3-ab64-91146c40e1ba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Product Name</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Price</th>\n",
              "      <th>Discount</th>\n",
              "      <th>Price Before Discount</th>\n",
              "      <th>Processor Brand</th>\n",
              "      <th>Processor Name</th>\n",
              "      <th>SSD</th>\n",
              "      <th>SSD Capacity</th>\n",
              "      <th>RAM</th>\n",
              "      <th>RAM Type</th>\n",
              "      <th>Processor Variant</th>\n",
              "      <th>Graphic Processor</th>\n",
              "      <th>Storage Type</th>\n",
              "      <th>Ratings Count</th>\n",
              "      <th>Reviews Count</th>\n",
              "      <th>Brand</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>51990</td>\n",
              "      <td>38% off</td>\n",
              "      <td>84999.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>13420H</td>\n",
              "      <td>NVIDIA GeForce RTX 2050</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1558.0</td>\n",
              "      <td>117.0</td>\n",
              "      <td>Acer</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>CHUWI Intel Celeron Dual Core 11th Gen N4020 -...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>18990</td>\n",
              "      <td>52% off</td>\n",
              "      <td>39990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Celeron Dual Core</td>\n",
              "      <td>Yes</td>\n",
              "      <td>256 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR5</td>\n",
              "      <td>N4020</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1151.0</td>\n",
              "      <td>133.0</td>\n",
              "      <td>CHUWI</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>47990</td>\n",
              "      <td>23% off</td>\n",
              "      <td>62526.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated Iris Xe</td>\n",
              "      <td>SSD</td>\n",
              "      <td>5674.0</td>\n",
              "      <td>292.0</td>\n",
              "      <td>HP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>HP Pavilion Intel Core i5 12th Gen 1235U - (16...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>56990</td>\n",
              "      <td>22% off</td>\n",
              "      <td>73688.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated UHD Graphics</td>\n",
              "      <td>SSD</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>149.0</td>\n",
              "      <td>HP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ASUS ExpertBook B14 Intel Core i3 12th Gen 121...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>32990</td>\n",
              "      <td>35% off</td>\n",
              "      <td>50990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i3</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512 GB</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1215U</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>252.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>ASUS</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4bee46e-e2c4-46c3-ab64-91146c40e1ba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c4bee46e-e2c4-46c3-ab64-91146c40e1ba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c4bee46e-e2c4-46c3-ab64-91146c40e1ba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c93de67c-240a-4c6c-9aab-43ce42ad7ceb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c93de67c-240a-4c6c-9aab-43ce42ad7ceb')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c93de67c-240a-4c6c-9aab-43ce42ad7ceb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 858,\n  \"fields\": [\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 485,\n        \"samples\": [\n          \"Lenovo IdeaPad Gaming 3 AMD Ryzen 5 Hexa Core 7535HS - (16 GB/512 GB SSD/Windows 11 Home/4 GB Graphics...\",\n          \"DELL Inspiron 3520 Intel Core i5 12th Gen 1235U - (8 GB/512 GB SSD/Windows 11 Home) 0IN352010031RINB1M...\",\n          \"Lenovo V15 Series AMD Athlon Dual Core 7120U - (8 GB/512 GB SSD/Windows 11 Home) V15 Thin and Light La...\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"3.3\",\n          \"3\",\n          \"4.3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 9990,\n        \"max\": 345990,\n        \"num_unique_values\": 288,\n        \"samples\": [\n          31900,\n          59994,\n          194990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"38% off\",\n          \"20% off\",\n          \"29% off\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Before Discount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41682.887429397095,\n        \"min\": 20990.0,\n        \"max\": 399900.0,\n        \"num_unique_values\": 349,\n        \"samples\": [\n          85990.0,\n          149990.0,\n          90783.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"AMD\",\n          \"Apple\",\n          \"MediaTek\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"M3 Max\",\n          \"M4\",\n          \"MT8183\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD Capacity\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"512 GB\",\n          \"256 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"16 GB\",\n          \"8 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"DDR4\",\n          \"DDR5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Variant\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 111,\n        \"samples\": [\n          \"1360P\",\n          \"1305U\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Graphic Processor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"Intel Integrated Intel\",\n          \"AMD Radeon RX 6600M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Storage Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"eMMC\",\n          \"UFS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ratings Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2124.597515498934,\n        \"min\": 2.0,\n        \"max\": 17214.0,\n        \"num_unique_values\": 271,\n        \"samples\": [\n          445.0,\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 153.16684996096131,\n        \"min\": 0.0,\n        \"max\": 1355.0,\n        \"num_unique_values\": 135,\n        \"samples\": [\n          68.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"MICROSOFT\",\n          \"Thomson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Removing GB from RAM and SSD Capacity"
      ],
      "metadata": {
        "id": "TDNT-I_baKG7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def convert_tb_to_gb(value):\n",
        "    if 'TB' in value:\n",
        "        return str(float(value.replace(' TB', '').replace(',', '')) * 1024) + ' GB'\n",
        "    return value  # If it's already in GB, return as is\n",
        "\n",
        "# Apply the conversion to 'SSD Capacity' column\n",
        "df['SSD Capacity'] = df['SSD Capacity'].apply(convert_tb_to_gb)\n",
        "\n",
        "# Show the updated DataFrame\n",
        "print(df['SSD Capacity'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vcv4a5O4a9mz",
        "outputId": "75a7c787-9826-4610-c328-bf373b40bd29"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0      512 GB\n",
            "1      256 GB\n",
            "2      512 GB\n",
            "3      512 GB\n",
            "4      512 GB\n",
            "        ...  \n",
            "907    512 GB\n",
            "908    512 GB\n",
            "909    512 GB\n",
            "910    512 GB\n",
            "911    512 GB\n",
            "Name: SSD Capacity, Length: 858, dtype: object\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-32-075ec352dcd0>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df['SSD Capacity'] = df['SSD Capacity'].apply(convert_tb_to_gb)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Remove 'GB' from 'SSD Capacity'\n",
        "df['SSD Capacity'] = df['SSD Capacity'].str.replace(' GB', '', regex=False)"
      ],
      "metadata": {
        "id": "ZdC2NQ2pbDJx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop_duplicates(inplace=True)"
      ],
      "metadata": {
        "id": "3S3amQZNbpDu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Hj0h6Yr5cF_y",
        "outputId": "653f9898-729c-4874-83ce-9e1912371588"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 503 entries, 0 to 911\n",
            "Data columns (total 17 columns):\n",
            " #   Column                 Non-Null Count  Dtype  \n",
            "---  ------                 --------------  -----  \n",
            " 0   Product Name           503 non-null    object \n",
            " 1   Rating                 503 non-null    object \n",
            " 2   Price                  503 non-null    object \n",
            " 3   Discount               503 non-null    object \n",
            " 4   Price Before Discount  503 non-null    float64\n",
            " 5   Processor Brand        503 non-null    object \n",
            " 6   Processor Name         503 non-null    object \n",
            " 7   SSD                    503 non-null    object \n",
            " 8   SSD Capacity           503 non-null    object \n",
            " 9   RAM                    503 non-null    object \n",
            " 10  RAM Type               503 non-null    object \n",
            " 11  Processor Variant      503 non-null    object \n",
            " 12  Graphic Processor      503 non-null    object \n",
            " 13  Storage Type           503 non-null    object \n",
            " 14  Ratings Count          446 non-null    float64\n",
            " 15  Reviews Count          503 non-null    float64\n",
            " 16  Brand                  503 non-null    object \n",
            "dtypes: float64(3), object(14)\n",
            "memory usage: 70.7+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Ratings Count']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        },
        "id": "lmdxIpZpcWkg",
        "outputId": "a0af5613-f9e7-47ad-bba2-cd225143f6ae"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0      1558.0\n",
              "1      1151.0\n",
              "2      5674.0\n",
              "3      2011.0\n",
              "4       252.0\n",
              "        ...  \n",
              "903      21.0\n",
              "906       NaN\n",
              "907      72.0\n",
              "910     233.0\n",
              "911     118.0\n",
              "Name: Ratings Count, Length: 503, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ratings Count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1558.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1151.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5674.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2011.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>252.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>903</th>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>906</th>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>907</th>\n",
              "      <td>72.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>910</th>\n",
              "      <td>233.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>911</th>\n",
              "      <td>118.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>503 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fill NaN values in 'Ratings Count' with 0\n",
        "df.loc[:, 'Ratings Count'] = df['Ratings Count'].fillna(0)"
      ],
      "metadata": {
        "id": "MxRgYTKAc4Lo"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 414
        },
        "id": "ekTaWXeZdHWa",
        "outputId": "9535a0d8-ce56-4921-f1fd-bd54ca7f7ebf"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        Product Name Rating  Price Discount  \\\n",
              "0  Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...    4.3  51990  38% off   \n",
              "1  CHUWI Intel Celeron Dual Core 11th Gen N4020 -...    3.7  18990  52% off   \n",
              "2  HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...    4.2  47990  23% off   \n",
              "3  HP Pavilion Intel Core i5 12th Gen 1235U - (16...    4.3  56990  22% off   \n",
              "4  ASUS ExpertBook B14 Intel Core i3 12th Gen 121...    4.3  32990  35% off   \n",
              "\n",
              "   Price Before Discount Processor Brand     Processor Name  SSD SSD Capacity  \\\n",
              "0                84999.0           Intel            Core i5  Yes          512   \n",
              "1                39990.0           Intel  Celeron Dual Core  Yes          256   \n",
              "2                62526.0           Intel            Core i5  Yes          512   \n",
              "3                73688.0           Intel            Core i5  Yes          512   \n",
              "4                50990.0           Intel            Core i3  Yes          512   \n",
              "\n",
              "     RAM RAM Type Processor Variant              Graphic Processor  \\\n",
              "0  16 GB     DDR4            13420H        NVIDIA GeForce RTX 2050   \n",
              "1   8 GB     DDR5             N4020           Intel Integrated UHD   \n",
              "2  16 GB     DDR4             1235U       Intel Integrated Iris Xe   \n",
              "3  16 GB     DDR4             1235U  Intel Integrated UHD Graphics   \n",
              "4   8 GB     DDR4             1215U           Intel Integrated UHD   \n",
              "\n",
              "  Storage Type  Ratings Count  Reviews Count  Brand  \n",
              "0          SSD         1558.0          117.0   Acer  \n",
              "1          SSD         1151.0          133.0  CHUWI  \n",
              "2          SSD         5674.0          292.0     HP  \n",
              "3          SSD         2011.0          149.0     HP  \n",
              "4          SSD          252.0           22.0   ASUS  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a2068ee1-2315-46d8-a4f3-6d47b7490f12\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Product Name</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Price</th>\n",
              "      <th>Discount</th>\n",
              "      <th>Price Before Discount</th>\n",
              "      <th>Processor Brand</th>\n",
              "      <th>Processor Name</th>\n",
              "      <th>SSD</th>\n",
              "      <th>SSD Capacity</th>\n",
              "      <th>RAM</th>\n",
              "      <th>RAM Type</th>\n",
              "      <th>Processor Variant</th>\n",
              "      <th>Graphic Processor</th>\n",
              "      <th>Storage Type</th>\n",
              "      <th>Ratings Count</th>\n",
              "      <th>Reviews Count</th>\n",
              "      <th>Brand</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>51990</td>\n",
              "      <td>38% off</td>\n",
              "      <td>84999.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>13420H</td>\n",
              "      <td>NVIDIA GeForce RTX 2050</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1558.0</td>\n",
              "      <td>117.0</td>\n",
              "      <td>Acer</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>CHUWI Intel Celeron Dual Core 11th Gen N4020 -...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>18990</td>\n",
              "      <td>52% off</td>\n",
              "      <td>39990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Celeron Dual Core</td>\n",
              "      <td>Yes</td>\n",
              "      <td>256</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR5</td>\n",
              "      <td>N4020</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1151.0</td>\n",
              "      <td>133.0</td>\n",
              "      <td>CHUWI</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>47990</td>\n",
              "      <td>23% off</td>\n",
              "      <td>62526.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated Iris Xe</td>\n",
              "      <td>SSD</td>\n",
              "      <td>5674.0</td>\n",
              "      <td>292.0</td>\n",
              "      <td>HP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>HP Pavilion Intel Core i5 12th Gen 1235U - (16...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>56990</td>\n",
              "      <td>22% off</td>\n",
              "      <td>73688.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated UHD Graphics</td>\n",
              "      <td>SSD</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>149.0</td>\n",
              "      <td>HP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ASUS ExpertBook B14 Intel Core i3 12th Gen 121...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>32990</td>\n",
              "      <td>35% off</td>\n",
              "      <td>50990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i3</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1215U</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>252.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>ASUS</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a2068ee1-2315-46d8-a4f3-6d47b7490f12')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a2068ee1-2315-46d8-a4f3-6d47b7490f12 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a2068ee1-2315-46d8-a4f3-6d47b7490f12');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d0b43755-0032-4ab4-932a-f413def0b124\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d0b43755-0032-4ab4-932a-f413def0b124')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d0b43755-0032-4ab4-932a-f413def0b124 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 503,\n  \"fields\": [\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 485,\n        \"samples\": [\n          \"Lenovo IdeaPad Gaming 3 AMD Ryzen 5 Hexa Core 7535HS - (16 GB/512 GB SSD/Windows 11 Home/4 GB Graphics...\",\n          \"DELL Inspiron 3520 Intel Core i5 12th Gen 1235U - (8 GB/512 GB SSD/Windows 11 Home) 0IN352010031RINB1M...\",\n          \"Lenovo V15 Series AMD Athlon Dual Core 7120U - (8 GB/512 GB SSD/Windows 11 Home) V15 Thin and Light La...\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"3.3\",\n          \"3\",\n          \"4.3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 9990,\n        \"max\": 345990,\n        \"num_unique_values\": 288,\n        \"samples\": [\n          31900,\n          59994,\n          194990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"38% off\",\n          \"20% off\",\n          \"29% off\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Before Discount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 47276.44671420528,\n        \"min\": 20990.0,\n        \"max\": 399900.0,\n        \"num_unique_values\": 349,\n        \"samples\": [\n          85990.0,\n          149990.0,\n          90783.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"AMD\",\n          \"Apple\",\n          \"MediaTek\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"M3 Max\",\n          \"M4\",\n          \"MT8183\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD Capacity\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"512\",\n          \"256\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"16 GB\",\n          \"8 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"DDR4\",\n          \"DDR5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Variant\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 111,\n        \"samples\": [\n          \"1360P\",\n          \"1305U\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Graphic Processor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"Intel Integrated Intel\",\n          \"AMD Radeon RX 6600M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Storage Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"eMMC\",\n          \"UFS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ratings Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2441.0998610103993,\n        \"min\": 0.0,\n        \"max\": 17214.0,\n        \"num_unique_values\": 272,\n        \"samples\": [\n          445.0,\n          86.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 181.6881301237983,\n        \"min\": 0.0,\n        \"max\": 1355.0,\n        \"num_unique_values\": 135,\n        \"samples\": [\n          68.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"MICROSOFT\",\n          \"Thomson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_copy = df.copy()"
      ],
      "metadata": {
        "id": "jSnIvWHTdJRu"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_copy.to_csv('cleaned_laptop_data.csv', index=False)"
      ],
      "metadata": {
        "id": "-bbUO3YjdibT"
      },
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "id": "aa52S9NoeByF",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 414
        },
        "outputId": "338a859d-1b5c-465e-8f36-e0a5552b28ca"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        Product Name Rating  Price Discount  \\\n",
              "0  Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...    4.3  51990  38% off   \n",
              "1  CHUWI Intel Celeron Dual Core 11th Gen N4020 -...    3.7  18990  52% off   \n",
              "2  HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...    4.2  47990  23% off   \n",
              "3  HP Pavilion Intel Core i5 12th Gen 1235U - (16...    4.3  56990  22% off   \n",
              "4  ASUS ExpertBook B14 Intel Core i3 12th Gen 121...    4.3  32990  35% off   \n",
              "\n",
              "   Price Before Discount Processor Brand     Processor Name  SSD SSD Capacity  \\\n",
              "0                84999.0           Intel            Core i5  Yes          512   \n",
              "1                39990.0           Intel  Celeron Dual Core  Yes          256   \n",
              "2                62526.0           Intel            Core i5  Yes          512   \n",
              "3                73688.0           Intel            Core i5  Yes          512   \n",
              "4                50990.0           Intel            Core i3  Yes          512   \n",
              "\n",
              "     RAM RAM Type Processor Variant              Graphic Processor  \\\n",
              "0  16 GB     DDR4            13420H        NVIDIA GeForce RTX 2050   \n",
              "1   8 GB     DDR5             N4020           Intel Integrated UHD   \n",
              "2  16 GB     DDR4             1235U       Intel Integrated Iris Xe   \n",
              "3  16 GB     DDR4             1235U  Intel Integrated UHD Graphics   \n",
              "4   8 GB     DDR4             1215U           Intel Integrated UHD   \n",
              "\n",
              "  Storage Type  Ratings Count  Reviews Count  Brand  \n",
              "0          SSD         1558.0          117.0   Acer  \n",
              "1          SSD         1151.0          133.0  CHUWI  \n",
              "2          SSD         5674.0          292.0     HP  \n",
              "3          SSD         2011.0          149.0     HP  \n",
              "4          SSD          252.0           22.0   ASUS  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b3163dd3-4177-4050-a6b3-5d17d563b503\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Product Name</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Price</th>\n",
              "      <th>Discount</th>\n",
              "      <th>Price Before Discount</th>\n",
              "      <th>Processor Brand</th>\n",
              "      <th>Processor Name</th>\n",
              "      <th>SSD</th>\n",
              "      <th>SSD Capacity</th>\n",
              "      <th>RAM</th>\n",
              "      <th>RAM Type</th>\n",
              "      <th>Processor Variant</th>\n",
              "      <th>Graphic Processor</th>\n",
              "      <th>Storage Type</th>\n",
              "      <th>Ratings Count</th>\n",
              "      <th>Reviews Count</th>\n",
              "      <th>Brand</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>51990</td>\n",
              "      <td>38% off</td>\n",
              "      <td>84999.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>13420H</td>\n",
              "      <td>NVIDIA GeForce RTX 2050</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1558.0</td>\n",
              "      <td>117.0</td>\n",
              "      <td>Acer</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>CHUWI Intel Celeron Dual Core 11th Gen N4020 -...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>18990</td>\n",
              "      <td>52% off</td>\n",
              "      <td>39990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Celeron Dual Core</td>\n",
              "      <td>Yes</td>\n",
              "      <td>256</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR5</td>\n",
              "      <td>N4020</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1151.0</td>\n",
              "      <td>133.0</td>\n",
              "      <td>CHUWI</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>47990</td>\n",
              "      <td>23% off</td>\n",
              "      <td>62526.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated Iris Xe</td>\n",
              "      <td>SSD</td>\n",
              "      <td>5674.0</td>\n",
              "      <td>292.0</td>\n",
              "      <td>HP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>HP Pavilion Intel Core i5 12th Gen 1235U - (16...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>56990</td>\n",
              "      <td>22% off</td>\n",
              "      <td>73688.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated UHD Graphics</td>\n",
              "      <td>SSD</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>149.0</td>\n",
              "      <td>HP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ASUS ExpertBook B14 Intel Core i3 12th Gen 121...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>32990</td>\n",
              "      <td>35% off</td>\n",
              "      <td>50990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i3</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1215U</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>252.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>ASUS</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3163dd3-4177-4050-a6b3-5d17d563b503')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b3163dd3-4177-4050-a6b3-5d17d563b503 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b3163dd3-4177-4050-a6b3-5d17d563b503');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d373cb39-071a-4515-8ebf-9f913f4af9c7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d373cb39-071a-4515-8ebf-9f913f4af9c7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d373cb39-071a-4515-8ebf-9f913f4af9c7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 503,\n  \"fields\": [\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 485,\n        \"samples\": [\n          \"Lenovo IdeaPad Gaming 3 AMD Ryzen 5 Hexa Core 7535HS - (16 GB/512 GB SSD/Windows 11 Home/4 GB Graphics...\",\n          \"DELL Inspiron 3520 Intel Core i5 12th Gen 1235U - (8 GB/512 GB SSD/Windows 11 Home) 0IN352010031RINB1M...\",\n          \"Lenovo V15 Series AMD Athlon Dual Core 7120U - (8 GB/512 GB SSD/Windows 11 Home) V15 Thin and Light La...\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"3.3\",\n          \"3\",\n          \"4.3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 9990,\n        \"max\": 345990,\n        \"num_unique_values\": 288,\n        \"samples\": [\n          31900,\n          59994,\n          194990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"38% off\",\n          \"20% off\",\n          \"29% off\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Before Discount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 47276.44671420528,\n        \"min\": 20990.0,\n        \"max\": 399900.0,\n        \"num_unique_values\": 349,\n        \"samples\": [\n          85990.0,\n          149990.0,\n          90783.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"AMD\",\n          \"Apple\",\n          \"MediaTek\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"M3 Max\",\n          \"M4\",\n          \"MT8183\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD Capacity\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"512\",\n          \"256\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"16 GB\",\n          \"8 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"DDR4\",\n          \"DDR5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Variant\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 111,\n        \"samples\": [\n          \"1360P\",\n          \"1305U\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Graphic Processor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"Intel Integrated Intel\",\n          \"AMD Radeon RX 6600M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Storage Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"eMMC\",\n          \"UFS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ratings Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2441.0998610103993,\n        \"min\": 0.0,\n        \"max\": 17214.0,\n        \"num_unique_values\": 272,\n        \"samples\": [\n          445.0,\n          86.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 181.6881301237983,\n        \"min\": 0.0,\n        \"max\": 1355.0,\n        \"num_unique_values\": 135,\n        \"samples\": [\n          68.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"MICROSOFT\",\n          \"Thomson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oka2yDBq1CZ4",
        "outputId": "c6a80181-90ef-4106-c09a-e684834dc15c"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 503 entries, 0 to 911\n",
            "Data columns (total 17 columns):\n",
            " #   Column                 Non-Null Count  Dtype  \n",
            "---  ------                 --------------  -----  \n",
            " 0   Product Name           503 non-null    object \n",
            " 1   Rating                 503 non-null    object \n",
            " 2   Price                  503 non-null    object \n",
            " 3   Discount               503 non-null    object \n",
            " 4   Price Before Discount  503 non-null    float64\n",
            " 5   Processor Brand        503 non-null    object \n",
            " 6   Processor Name         503 non-null    object \n",
            " 7   SSD                    503 non-null    object \n",
            " 8   SSD Capacity           503 non-null    object \n",
            " 9   RAM                    503 non-null    object \n",
            " 10  RAM Type               503 non-null    object \n",
            " 11  Processor Variant      503 non-null    object \n",
            " 12  Graphic Processor      503 non-null    object \n",
            " 13  Storage Type           503 non-null    object \n",
            " 14  Ratings Count          503 non-null    float64\n",
            " 15  Reviews Count          503 non-null    float64\n",
            " 16  Brand                  503 non-null    object \n",
            "dtypes: float64(3), object(14)\n",
            "memory usage: 86.9+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Rating'] = pd.to_numeric(df['Rating'], errors='coerce')"
      ],
      "metadata": {
        "id": "yJDFaxmb2UL0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Replace 'Not Available' or other non-numeric values with NaN\n",
        "df['Discount'] = df['Discount'].replace('Not Available', None)\n",
        "\n",
        "# Remove '% off' from the Discount column and convert to numeric, handling NaN values\n",
        "df['Discount'] = df['Discount'].str.replace('% off', '', regex=False).astype(float)\n",
        "\n",
        "# Rename the column to 'Discount in Percent'\n",
        "df.rename(columns={'Discount': 'Discount in Percent'}, inplace=True)"
      ],
      "metadata": {
        "id": "DTRR3o2K2lnc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 414
        },
        "id": "EgHFXCuG2phH",
        "outputId": "a2a970df-015d-4bdd-b26f-3bdc05779acf"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        Product Name  Rating  Price  \\\n",
              "0  Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...     4.3  51990   \n",
              "1  CHUWI Intel Celeron Dual Core 11th Gen N4020 -...     3.7  18990   \n",
              "2  HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...     4.2  47990   \n",
              "3  HP Pavilion Intel Core i5 12th Gen 1235U - (16...     4.3  56990   \n",
              "4  ASUS ExpertBook B14 Intel Core i3 12th Gen 121...     4.3  32990   \n",
              "\n",
              "   Discount in Percent  Price Before Discount Processor Brand  \\\n",
              "0                 38.0                84999.0           Intel   \n",
              "1                 52.0                39990.0           Intel   \n",
              "2                 23.0                62526.0           Intel   \n",
              "3                 22.0                73688.0           Intel   \n",
              "4                 35.0                50990.0           Intel   \n",
              "\n",
              "      Processor Name  SSD SSD Capacity    RAM RAM Type Processor Variant  \\\n",
              "0            Core i5  Yes          512  16 GB     DDR4            13420H   \n",
              "1  Celeron Dual Core  Yes          256   8 GB     DDR5             N4020   \n",
              "2            Core i5  Yes          512  16 GB     DDR4             1235U   \n",
              "3            Core i5  Yes          512  16 GB     DDR4             1235U   \n",
              "4            Core i3  Yes          512   8 GB     DDR4             1215U   \n",
              "\n",
              "               Graphic Processor Storage Type  Ratings Count  Reviews Count  \\\n",
              "0        NVIDIA GeForce RTX 2050          SSD         1558.0          117.0   \n",
              "1           Intel Integrated UHD          SSD         1151.0          133.0   \n",
              "2       Intel Integrated Iris Xe          SSD         5674.0          292.0   \n",
              "3  Intel Integrated UHD Graphics          SSD         2011.0          149.0   \n",
              "4           Intel Integrated UHD          SSD          252.0           22.0   \n",
              "\n",
              "   Brand  \n",
              "0   Acer  \n",
              "1  CHUWI  \n",
              "2     HP  \n",
              "3     HP  \n",
              "4   ASUS  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b4b4b057-d45e-47e8-bc19-393db3874cc8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Product Name</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Price</th>\n",
              "      <th>Discount in Percent</th>\n",
              "      <th>Price Before Discount</th>\n",
              "      <th>Processor Brand</th>\n",
              "      <th>Processor Name</th>\n",
              "      <th>SSD</th>\n",
              "      <th>SSD Capacity</th>\n",
              "      <th>RAM</th>\n",
              "      <th>RAM Type</th>\n",
              "      <th>Processor Variant</th>\n",
              "      <th>Graphic Processor</th>\n",
              "      <th>Storage Type</th>\n",
              "      <th>Ratings Count</th>\n",
              "      <th>Reviews Count</th>\n",
              "      <th>Brand</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Acer Aspire 7 Intel Core i5 13th Gen 13420H - ...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>51990</td>\n",
              "      <td>38.0</td>\n",
              "      <td>84999.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>13420H</td>\n",
              "      <td>NVIDIA GeForce RTX 2050</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1558.0</td>\n",
              "      <td>117.0</td>\n",
              "      <td>Acer</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>CHUWI Intel Celeron Dual Core 11th Gen N4020 -...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>18990</td>\n",
              "      <td>52.0</td>\n",
              "      <td>39990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Celeron Dual Core</td>\n",
              "      <td>Yes</td>\n",
              "      <td>256</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR5</td>\n",
              "      <td>N4020</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>1151.0</td>\n",
              "      <td>133.0</td>\n",
              "      <td>CHUWI</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>HP Intel Core i5 12th Gen 1235U - (16 GB/512 G...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>47990</td>\n",
              "      <td>23.0</td>\n",
              "      <td>62526.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated Iris Xe</td>\n",
              "      <td>SSD</td>\n",
              "      <td>5674.0</td>\n",
              "      <td>292.0</td>\n",
              "      <td>HP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>HP Pavilion Intel Core i5 12th Gen 1235U - (16...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>56990</td>\n",
              "      <td>22.0</td>\n",
              "      <td>73688.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i5</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>16 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1235U</td>\n",
              "      <td>Intel Integrated UHD Graphics</td>\n",
              "      <td>SSD</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>149.0</td>\n",
              "      <td>HP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ASUS ExpertBook B14 Intel Core i3 12th Gen 121...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>32990</td>\n",
              "      <td>35.0</td>\n",
              "      <td>50990.0</td>\n",
              "      <td>Intel</td>\n",
              "      <td>Core i3</td>\n",
              "      <td>Yes</td>\n",
              "      <td>512</td>\n",
              "      <td>8 GB</td>\n",
              "      <td>DDR4</td>\n",
              "      <td>1215U</td>\n",
              "      <td>Intel Integrated UHD</td>\n",
              "      <td>SSD</td>\n",
              "      <td>252.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>ASUS</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4b4b057-d45e-47e8-bc19-393db3874cc8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b4b4b057-d45e-47e8-bc19-393db3874cc8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b4b4b057-d45e-47e8-bc19-393db3874cc8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4427dc80-6628-4345-8a2d-30001841a785\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4427dc80-6628-4345-8a2d-30001841a785')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4427dc80-6628-4345-8a2d-30001841a785 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 503,\n  \"fields\": [\n    {\n      \"column\": \"Product Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 485,\n        \"samples\": [\n          \"Lenovo IdeaPad Gaming 3 AMD Ryzen 5 Hexa Core 7535HS - (16 GB/512 GB SSD/Windows 11 Home/4 GB Graphics...\",\n          \"DELL Inspiron 3520 Intel Core i5 12th Gen 1235U - (8 GB/512 GB SSD/Windows 11 Home) 0IN352010031RINB1M...\",\n          \"Lenovo V15 Series AMD Athlon Dual Core 7120U - (8 GB/512 GB SSD/Windows 11 Home) V15 Thin and Light La...\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3265611932378158,\n        \"min\": 2.3,\n        \"max\": 5.0,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          4.3,\n          4.8,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 9990,\n        \"max\": 345990,\n        \"num_unique_values\": 288,\n        \"samples\": [\n          31900,\n          59994,\n          194990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount in Percent\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.84707031742016,\n        \"min\": 2.0,\n        \"max\": 71.0,\n        \"num_unique_values\": 58,\n        \"samples\": [\n          38.0,\n          20.0,\n          29.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Before Discount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 47276.44671420528,\n        \"min\": 20990.0,\n        \"max\": 399900.0,\n        \"num_unique_values\": 349,\n        \"samples\": [\n          85990.0,\n          149990.0,\n          90783.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"AMD\",\n          \"Apple\",\n          \"MediaTek\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"M3 Max\",\n          \"M4\",\n          \"MT8183\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SSD Capacity\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"512\",\n          \"256\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"16 GB\",\n          \"8 GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"DDR4\",\n          \"DDR5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Processor Variant\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 111,\n        \"samples\": [\n          \"1360P\",\n          \"1305U\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Graphic Processor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"Intel Integrated Intel\",\n          \"AMD Radeon RX 6600M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Storage Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"eMMC\",\n          \"UFS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ratings Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2441.0998610103993,\n        \"min\": 0.0,\n        \"max\": 17214.0,\n        \"num_unique_values\": 272,\n        \"samples\": [\n          445.0,\n          86.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 181.6881301237983,\n        \"min\": 0.0,\n        \"max\": 1355.0,\n        \"num_unique_values\": 135,\n        \"samples\": [\n          68.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"MICROSOFT\",\n          \"Thomson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cleaned_df = df.copy()\n",
        "cleaned_df.to_csv('cleaned_laptop_data.csv', index=False)"
      ],
      "metadata": {
        "id": "5ZeeauP_3jhi"
      },
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "7gjrdEEG4PT2"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}